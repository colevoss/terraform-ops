name: Create Staging Deployment

on:
  push:
    branches:
      - main

jobs:
  create-deployment:
    runs-on: ubuntu-latest
    outputs:
      deployment-id: ${{ steps.create-deployment.outputs.result.id}}

    steps:
      -
        id: create-deployment
        uses: actions/github-script@v5
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              auto_merge: false,
              required_contexts: [],
              environment: 'staging',
              payload: {
                test: 'test payload data'
              },
              description: 'Test deployment description'
            })

  finish-deployment:
    runs-on: ubuntu-latest
    needs: create-deployment

    steps:
      -
        id: finish-deployment
        uses: actions/github-script@v5
        with:
          script: |
            const deploymentStatus = await github.res.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ needs.create-deployment.outputs.deployment-id }},
              state: 'success',
            })